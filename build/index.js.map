{"version":3,"sources":["db/schemas/tracks.js","db/models/tracks.js","src/handleData/index.js","src/tgBot/index.js","db/index.js","index.js"],"names":["Tracks","Schema","userId","Number","trackingNumber","String","trackInfo","Track","mongose","model","trackSchema","getTrackInfo","trackNumber","data","Axios","get","$","cheerio","load","dataRows","events","each","date","children","text","event","push","addOrUpdateData","updateOne","JSON","stringify","upsert","setDefaultsOnInsert","deleteData","deleteOne","saveData","error","bot","TEST_MODE","process","env","TEST","init","tgBot","TGBot","TG_BOT","polling","onText","chat","id","sendMessage","match","rsp","slice","on","msg","chatId","server","database","Database","constructor","_connect","mongoose","connect","then","console","log","catch","err","require","config","Bot"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["import { Schema } from 'mongoose';\n\nconst Tracks = new Schema({\n    userId: Number,\n    trackingNumber: String,\n    trackInfo: String,\n})\n\nexport default Tracks;","import trackSchema from '../schemas/tracks'\nimport mongose from 'mongoose';\n\nconst Track = mongose.model('Track', trackSchema);\n\nexport default Track;","import * as cheerio from \"cheerio\"\nimport Axios from \"axios\"\nimport Track from '../../db/models/tracks';\n\nexport const getTrackInfo = async trackNumber => {\n  const { data } = await Axios.get(\n    `http://posta.md/ro/tracking?id=${trackNumber}`\n  )\n  const $ = cheerio.load(data)\n  const dataRows = $(\".row\")\n  const events = []\n\n  dataRows.each(function() {\n    const date = $(this)\n      .children(\".tracking-result-header-date\")\n      .text()\n    const event = $(this)\n      .children(\".tracking-result-header-event\")\n      .text()\n\n    events.push({ date, event })\n  })\n\n  return events\n}\n\nexport const addOrUpdateData = async ({ data, userId, trackingNumber }) => {\n  return Track.updateOne({ userId, trackingNumber }, { trackingNumber, userId, trackInfo: JSON.stringify(data) }, { upsert: true, setDefaultsOnInsert: true})\n}\n\nexport const deleteData = async ({ userId, trackingNumber }) => {\n  return Track.deleteOne({ userId, trackingNumber });\n}\n\nexport const saveData = async ({ userId, trackingNumber }) => {\n  const data = await getTrackInfo(trackingNumber);\n  try {\n    await addOrUpdateData({ data, userId, trackingNumber });\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error }\n  }\n}","import TGBot from 'node-telegram-bot-api';\nimport { saveData } from '../handleData';\n\nconst bot = {};\n\nconst TEST_MODE = process.env.TEST;\n\nbot.init = function () {\n    const tgBot = new TGBot(process.env.TG_BOT, { polling: true });\n\n    tgBot.onText(/\\/start/, ({ chat: { id }}) => {\n        tgBot.sendMessage(id, '/start -> shows list of commands');\n        tgBot.sendMessage(id, '/track -> followed by tracking number (/track RP*****12)');\n        tgBot.sendMessage(id, '/untrack -> followed by tracking number (/untrack RP****32)')\n    })\n\n    tgBot.onText(/\\/track (.+)/, async ({ chat }, match) => {\n        const trackingNumber = match[1];\n        const rsp = await saveData({ trackingNumber, userId: chat.id });\n        if (rsp.error) {\n            tgBot.sendMessage(chat.id, JSON.stringify(rsp.error));\n        } else {\n            \n            tgBot.sendMessage(chat.id, `Started tracking ${trackingNumber}, will stop if there are no updates in 2 weeks`);\n            if (!rsp.data) {\n                tgBot.sendMessage(chat.id, \"There is no registered data rn for this tracking number\");\n                return ;\n            }\n            const { event, date } = rsp.data.slice(-1)[0];\n            tgBot.sendMessage(chat.id, `Last event: ${event} registered on ${date}`);\n            if (TEST_MODE)\n                tgBot.sendMessage(chat.id, JSON.stringify(rsp.data));\n        }\n    })\n\n\n    tgBot.on('message', (msg) => {\n        const chatId = msg.chat.id;\n        // console.log(msg);\n        // console.log('recieved message');\n        // send a message to the chat acknowledging receipt of their message\n        tgBot.sendMessage(chatId, 'Received your message');\n      });\n}\n\n\nexport default bot;","import mongoose from 'mongoose';\nconst server = '127.0.0.1:27017';\nconst database = 'PTMD';\n\nclass Database {\n  constructor() {\n    this._connect()\n  }\n  \n_connect() {\n     mongoose.connect(`mongodb://${server}/${database}`)\n       .then(() => {\n         console.log('Database connection successful')\n       })\n       .catch(err => {\n         console.error('Database connection error')\n       })\n  }\n}\n\n\nexport default (new Database());","\nimport { getTrackInfo, deleteData } from './src/handleData';\nimport Bot from './src/tgBot';\n// initialize mongoose\nimport _DB from './db';\n\n// init process vars\nrequire('dotenv').config();\n\n(async () => {\n    // const data = await getTrackInfo('RG910688822BE')\n   \n    // console.log(data);\n    // const rs = await deleteData({ userId: 2, trackingNumber: 'RG910688822BE' });\n    // console.log(rs);\n\n    Bot.init();\n\n})()"]}